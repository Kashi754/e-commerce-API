{
  "openapi": "3.0.1",
  "info": {
    "description": "An api for interacting with the E-Commerce-App backend.\n\n### Admin user info:\n##### Username | 'admin'\n##### Password | 'password'<br /><br />\n### Regular user info:\n##### Username | 'user'\n##### Password | 'password'\n\nClick [here](https://e-commerce-app-frontend-e50n.onrender.com) to visit the frontend for the E-Commerce-App.\n\nIf the backend server does not immediately respond, please wait.  It should be ready in less than a minute.",
    "version": "1.1.0",
    "title": "Online E-Commerce API",
    "contact": {
      "email": "arigorn15@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://e-commerce-api-zjzj.onrender.com",
      "description": "Production server endpoint"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Products",
      "description": "Access to E-Commerce API products"
    },
    {
      "name": "Cart",
      "description": "Operations about User's Cart"
    },
    {
      "name": "Orders",
      "description": "Operations about User's Orders"
    },
    {
      "name": "Shipping",
      "description": "Fedex shipping api"
    },
    {
      "name": "Categories",
      "description": "Operations about Categories"
    },
    {
      "name": "Secret",
      "description": "Stripe client secret"
    },
    {
      "name": "Checkout",
      "description": "Stripe payment intent"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/register": {
      "summary": "Register a new user",
      "description": "This path is used to register a new user to the database",
      "post": {
        "summary": "Add new user",
        "description": "Register a new user to the database",
        "operationId": "register_user",
        "requestBody": {
          "description": "User Credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_info"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                  "username": "example_user",
                  "email": "user@email.com"
                }
              }
            }
          },
          "400": {
            "description": "Missing Required Information (username, email, password, first name, last name)",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Please fill in all required fields"
                }
              }
            }
          },
          "422": {
            "description": "User with given email/username already exists",
            "content": {
              "application/json": {
                "example": {
                  "status": 422,
                  "message": "User with that username or email already exists"
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/login": {
      "summary": "Log in as user",
      "description": "This path is used to Log in to the API",
      "post": {
        "summary": "Log in as User",
        "description": "Send login credentials to the server and request authentication",
        "operationId": "login_user",
        "requestBody": {
          "description": "User Credentials",
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  { "$ref": "#/components/schemas/username_login" },
                  { "$ref": "#/components/schemas/email_login" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                  "username": "example_user",
                  "email": "user@email.com",
                  "first_name": "John",
                  "last_name": "Doe",
                  "role": "user",
                  "cartId": 1
                }
              }
            }
          },
          "401": {
            "description": "Incorrect Username or Password",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Incorrect username or password."
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/login/success": {
      "summary": "Verify Logged in User",
      "description": "This path is used to verify a user is logged in to the API, and return the user's details",
      "get": {
        "summary": "Verify user session",
        "description": "Send request to the server and return user if a valid session exists",
        "operationId": "user_session",
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                  "username": "example_user",
                  "email": "user@email.com",
                  "first_name": "John",
                  "last_name": "Doe",
                  "role": "user",
                  "cartId": 1
                }
              }
            }
          },
          "401": {
            "description": "No User session exists",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/logout": {
      "summary": "Log out from user",
      "description": "This path is used to Log out of the API",
      "get": {
        "summary": "Log out from User",
        "description": "Send logout request to the server",
        "operationId": "logout_user",
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "Successfully logged out!"
                }
              }
            }
          },

          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/users": {
      "summary": "The user's information",
      "description": "Edit user's information",
      "put": {
        "summary": "Edit user's information",
        "description": "Edit information for a specific user, if that user is the logged in user and return the changed user information.",
        "operationId": "put_user",
        "requestBody": {
          "description": "User Information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_update"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "The id of the user.",
            "required": false,
            "schema": {
              "type": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                  "username": "test_user",
                  "email": "john_doe@email.com",
                  "first_name": "John,",
                  "last_name": "Doe",
                  "role": "user"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "User with ID {userId} not found"
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/users/password": {
      "summary": "User Password Operations",
      "description": "Change user's password",
      "put": {
        "summary": "Change user's password",
        "description": "Change password for a specific user, if that user is the logged in user and return the changed user information.",
        "operationId": "put_user_password",
        "requestBody": {
          "description": "User Password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_password_update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "Password changed successfully!"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in or incorrect password",
            "content": {
              "application/json": {
                "example1": {
                  "status": 401,
                  "message": "Please Log In!"
                },
                "example2": {
                  "status": 401,
                  "message": "Incorrect Password"
                }
              }
            }
          },
          "404": {
            "description": "Not logged in or incorrect password",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "User with ID <userId> not found"
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/users/admin": {
      "summary": "User Admin Operations",
      "description": "Get users",
      "get": {
        "summary": "Get a list of users",
        "description": "Administrator can get a list of users filtered by email, username, or role",
        "operationId": "get_users",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter response by email, username, or role",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                    "username": "test_user",
                    "email": "john_doe@email.com",
                    "first_name": "John,",
                    "last_name": "Doe",
                    "role": "user"
                  },
                  {
                    "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                    "username": "test_user2",
                    "email": "jane_doe@email.com",
                    "first_name": "Jane,",
                    "last_name": "Doe",
                    "role": "admin"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "No User session exists",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          },
          "403": {
            "description": "Not administrator",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "message": "Permission Denied!"
                }
              }
            }
          },
          "404": {
            "description": "Invalid filter",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "Users not found!"
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/users/admin/{userId}": {
      "summary": "User Admin Operations",
      "description": "Edit a User's information",
      "patch": {
        "summary": "Edit user's information",
        "description": "Administrator can edit the email address and role for a specific user, return the list of users with updated information.",
        "operationId": "patch_user",
        "requestBody": {
          "description": "Updated User email and role",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_patch"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user.",
            "required": true,
            "schema": {
              "type": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter response by email or username",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                    "username": "test_user",
                    "email": "john_doe@email.com",
                    "first_name": "John,",
                    "last_name": "Doe",
                    "role": "user"
                  },
                  {
                    "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                    "username": "test_user2",
                    "email": "jane_doe@email.com",
                    "first_name": "Jane,",
                    "last_name": "Doe",
                    "role": "admin"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Malformed Request",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Invalid Input!"
                }
              }
            }
          },
          "401": {
            "description": "No User session exists",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          },
          "403": {
            "description": "Not administrator",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "message": "Permission Denied!"
                }
              }
            }
          },
          "404": {
            "description": "User not found or invalid filter",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "User with ID <userId> not found"
                },
                "example2": {
                  "status": 404,
                  "message": "Users not found!"
                }
              }
            }
          }
        },
        "tags": ["User"]
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Administrator can delete a specific user, return the list of users with updated information.",
        "operationId": "delete_user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user.",
            "required": true,
            "schema": {
              "type": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter response by email or username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                    "username": "test_user",
                    "email": "john_doe@email.com",
                    "first_name": "John,",
                    "last_name": "Doe",
                    "role": "user"
                  },
                  {
                    "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                    "username": "test_user2",
                    "email": "jane_doe@email.com",
                    "first_name": "Jane,",
                    "last_name": "Doe",
                    "role": "admin"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "No User session exists",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          },
          "403": {
            "description": "Not administrator",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "message": "Permission Denied!"
                }
              }
            }
          },
          "404": {
            "description": "User not found or invalid filter",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "User with ID <userId> not found"
                },
                "example2": {
                  "status": 404,
                  "message": "Users not found!"
                }
              }
            }
          }
        },
        "tags": ["User"]
      }
    },
    "/products": {
      "summary": "Product information",
      "description": "Search for products",
      "get": {
        "summary": "Search for products",
        "description": "Search the database by category_name, product_name and product_description and return results.  If search term is not provided, returns all products.  Can be filtered by price ",
        "operationId": "search_products",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "The search term for the product or category to search for"
          },
          {
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "integer"
            },
            "description": "The id of the category to search for"
          },
          {
            "in": "query",
            "name": "price_less_than",
            "schema": {
              "type": "number"
            },
            "description": "Search for products with a price less than this"
          },
          {
            "in": "query",
            "name": "price_greater_than",
            "schema": {
              "type": "number"
            },
            "description": "Search for products with a price greater than this"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                    "name": "example_product1",
                    "price": "$5.00",
                    "description": "Description",
                    "qty_in_stock": 100,
                    "image_file": "image-1709469725513.jpg"
                  },
                  {
                    "id": 2,
                    "name": "example_product2",
                    "price": "$5.00",
                    "description": "Description",
                    "qty_in_stock": 100,
                    "image_file": "image-1709469725602.jpg"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "No products found"
                }
              }
            }
          }
        },
        "tags": ["Products"]
      },
      "post": {
        "summary": "Insert new products into the database",
        "description": "Allows an administrator to add new products to the database.",
        "operationId": "post_products",
        "requestBody": {
          "description": "Product Information",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/product_update"
              },
              "encoding": {
                "image": {
                  "contentType": "image/*"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product Successfully Added!"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Please fill in all required fields!"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "message": "Permission Denied!"
                }
              }
            }
          }
        },
        "tags": ["Products"]
      }
    },
    "/products/{productId}": {
      "summary": "Product information",
      "description": "View product information",
      "get": {
        "summary": "Get product information by id",
        "description": "Request the information for a specific product",
        "operationId": "get_product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The id of the product.",
            "required": true,
            "schema": {
              "type": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": "{productId}",
                  "name": "example_product",
                  "price": "$5.00",
                  "description": "This is a description of the product",
                  "qty_in_stock": 100,
                  "image_file": "image-1709469725513.jpg"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "Product with ID {productId} not found"
                }
              }
            }
          }
        },
        "tags": ["Products"]
      },
      "put": {
        "summary": "Edit product's information",
        "description": "Allows a user with the 'admin' role to edit information for a specific product.",
        "operationId": "put_product",
        "requestBody": {
          "description": "Product Information",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/product_update"
              },
              "encoding": {
                "image": {
                  "contentType": "image/*"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The id of the product.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product Successfully Updated!"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Please fill in all required fields!"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "message": "Permission Denied!"
                }
              }
            }
          }
        },
        "tags": ["Products"]
      }
    },
    "/products/categories": {
      "summary": "Category information",
      "description": "View or add categories",
      "get": {
        "summary": "Get list of product categories",
        "description": "Returns a list of all product categories.",
        "operationId": "get_categories",
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "toiletries"
                  },
                  {
                    "id": 2,
                    "name": "electronics"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "No categories found!"
                }
              }
            }
          }
        },
        "tags": ["Products", "Categories"]
      },
      "post": {
        "summary": "Add a new category",
        "description": "Allows an administrator to add new categories.",
        "operationId": "post_category",
        "requestBody": {
          "description": "Product Information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categories_create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "new_category"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "message": "Category {categoryName} already exists!"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "message": "Permission Denied!"
                }
              }
            }
          }
        },
        "tags": ["Products"]
      }
    },
    "/secret": {
      "get": {
        "summary": "Get secret stripe secret",
        "description": "Create a stripe payment intent and retrieve the client secret.",
        "operationId": "get_secret",
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "client_secret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGHkz5Y2bH0q9kz5"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please Log In!"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "tags": ["Secret"]
      }
    },
    "/cart": {
      "summary": "The user's cart information",
      "description": "Operate on the logged in user's cart.",
      "get": {
        "summary": "Get user's cart information",
        "description": "Request the information for the logged in user's cart.",
        "operationId": "get_cart",
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "products": [
                    {
                      "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                      "name": "example_product1",
                      "price": "$5.00",
                      "qty": 1,
                      "image_file": "image-1709469725513.jpg"
                    }
                  ],
                  "total_price": 5.24
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please log in!"
                }
              }
            }
          }
        },
        "tags": ["Cart"]
      },
      "post": {
        "summary": "Add items to cart",
        "description": "Add products to the logged in user's cart, and return the changed cart information. Returns updated cart.",
        "operationId": "post_cart",
        "requestBody": {
          "description": "Product Information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cart_update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "products": [
                    {
                      "id": 1,
                      "name": "example_product1",
                      "price": 5.0,
                      "qty": 1,
                      "image_file": "image-1709469725513.jpg"
                    },
                    {
                      "id": 2,
                      "name": "example_product2",
                      "price": 5.0,
                      "qty": 1,
                      "image_file": "image-1709469725513.jpg"
                    }
                  ],
                  "total": 10.0
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please log in!"
                }
              }
            }
          }
        },
        "tags": ["Cart"]
      },
      "put": {
        "summary": "Update item quantity in cart",
        "description": "Updates the quantity of a product in the logged-in user's cart, and return the changed cart information.",
        "operationId": "put_cart",
        "requestBody": {
          "description": "Product Information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cart_update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "products": [
                    {
                      "id": 1,
                      "name": "example_product1",
                      "price": 5.0,
                      "qty": 1,
                      "image_file": "image-1709469725513.jpg"
                    },
                    {
                      "id": 2,
                      "name": "example_product2",
                      "price": 5.0,
                      "qty": 2,
                      "image_file": "image-1709469725513.jpg"
                    }
                  ],
                  "total_price": 15.0
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please log in!"
                }
              }
            }
          },
          "404": {
            "description": "Cart item not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "message": "Can't edit product.  Does not exist in cart!"
                }
              }
            }
          }
        },
        "tags": ["Cart"]
      },
      "delete": {
        "summary": "Delete item from cart",
        "description": "Delete products from the logged in user's cart, and return the changed cart information.",
        "operationId": "delete_cart",
        "parameters": [
          {
            "in": "query",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "uuid"
            },
            "description": "The id of the product to delete from the user's cart"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "products": [
                    {
                      "id": 1,
                      "name": "example_product2",
                      "price": 5.0,
                      "qty": 2,
                      "image_file": "image-1709469725513.jpg"
                    }
                  ],
                  "total_price": "$5.00"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please log in!"
                }
              }
            }
          },
          "404": {
            "description": "Cart item not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "message": "Can't edit product.  Does not exist in cart!"
                }
              }
            }
          }
        },
        "tags": ["Cart"]
      }
    },
    "/cart/checkout": {
      "summary": "Retrieve payment intent",
      "description": "Add a payment intent to the user's cart.",
      "post": {
        "summary": "Create a payment intent",
        "description": "Add a stripe payment intent (retrieved from the /secret endpoint) to the logged in user's cart in the database.",
        "operationId": "post_checkout",
        "requestBody": {
          "description": "Payment Intent",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/checkout"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "payment intent pi_3MtwBwLkdIwHu7ix28a3tqPa created!"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "text/plain; charset=utf-8": {
                "example": "Please log in!"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "message": "Something went wrong!"
                }
              }
            }
          }
        },
        "tags": ["Cart", "Checkout"]
      }
    },
    "/cart/shipping": {
      "summary": "Get shipping information",
      "description": "A wrapper around the Fedex shipping api.",
      "get": {
        "summary": "Get access token for Fedex shipping api",
        "description": "Allows a user to request an access token for the Fedex shipping api.",
        "operationId": "get_shipping",
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5...",
                  "expiresAt": 74739934,
                  "scope": "CXS"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "text/plain; charset=utf-8": {
                "example": "Please log in!"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "message": "{Error generated by the Fedex shipping api}"
                }
              }
            }
          }
        },
        "tags": ["Cart", "Shipping"]
      },
      "post": {
        "summary": "Retrieve shipping information",
        "description": "Allows a user to request shipping services and transit times from the Fedex shipping api given a total cart value and shipment weight.",
        "operationId": "get_shipping",
        "requestBody": {
          "description": "Shipping information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shipping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "serviceType": "FEDEX_GROUND",
                    "serviceName": "Fedex Ground",
                    "transitDays": 7,
                    "totalCharge": 10.0
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "text/plain; charset=utf-8": {
                "example": "Please log in!"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "message": "{Error generated by the Fedex shipping api}"
                }
              }
            }
          }
        },
        "tags": ["Cart", "Shipping"]
      },
      "patch": {
        "summary": "Update shipping price in database",
        "description": "Updates the cost of shipping for the logged in user's cart in the database.",
        "operationId": "patch_shipping",
        "requestBody": {
          "description": "Updated Price",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shipping_price"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "msg": "shipping price <shippingPrice> updated!"
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "text/plain; charset=utf-8": {
                "example": "Please log in!"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "message": "Something went wrong!"
                }
              }
            }
          }
        },
        "tags": ["Cart", "Shipping"]
      }
    },
    "/orders": {
      "summary": "Order information",
      "description": "View all orders",
      "get": {
        "summary": "Get list of orders",
        "description": "Search the database for and return all orders made by the current user",
        "operationId": "search_orders",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "schema": {
              "type": "uuid"
            },
            "description": "The id of the user to retrieve orders for.  If user is not an admin, only their own orders will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "date": "2023/02/24",
                    "total": "$15.00",
                    "shipping_status": "delivered",
                    "payment_status": "success"
                  },
                  {
                    "id": 2,
                    "date": "2022/04/27",
                    "total": "$100.00",
                    "shipping_status": "shipped",
                    "payment_status": "success"
                  },
                  {
                    "id": 3,
                    "date": "2022/03/05",
                    "total": "$35.00",
                    "shipping_status": "pending",
                    "payment_status": "success"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please log in!"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "No orders found for user with id <userId>!"
                }
              }
            }
          }
        },
        "tags": ["Orders"]
      }
    },
    "/orders/{orderId}": {
      "summary": "Order information",
      "description": "View specific order",
      "get": {
        "summary": "Get an order's details by id",
        "description": "Search the database for and return the order with the given id.",
        "operationId": "search_order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The id of the user's order.",
            "required": true,
            "schema": {
              "type": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": "00a725ab-9638-4a4b-b2da-449ec0201b07",
                  "date": "2023/02/24",
                  "total": 15.0,
                  "shipping_status": "delivered",
                  "payment_status": "success",
                  "tracking_number": "123456789",
                  "products": [
                    {
                      "id": 1,
                      "name": "example_product",
                      "price": 5.0,
                      "qty": 2,
                      "image_file": "image-1709469725513.jpg"
                    },
                    {
                      "id": 2,
                      "name": "example_product2",
                      "price": 5.0,
                      "qty": 1,
                      "image_file": "image-1709469725513.jpg"
                    }
                  ],
                  "shipping_address": {
                    "addr_line_1": "123 Main St",
                    "addr_line_2": "Suite 1",
                    "city": "San Diego",
                    "state": "CA",
                    "zip_code": 92101
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please log in!"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "message": "Permission Denied!"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain; charset=utf-8": {
                "example": "Order with ID <orderId> not found."
              }
            }
          }
        },
        "tags": ["Orders"]
      }
    },
    "/orders/admin": {
      "summary": "Order information",
      "description": "View all orders",
      "get": {
        "summary": "Get list of orders",
        "description": "Search the database for and return all or filtered orders for all users",
        "operationId": "search_admin_orders",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": ["string", "uuid"]
            },
            "description": "Either the shipping status, or id of the order or user."
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "date": "2023/02/24",
                    "total": "$15.00",
                    "shipping_status": "delivered",
                    "payment_status": "success"
                  },
                  {
                    "id": 2,
                    "date": "2022/04/27",
                    "total": "$100.00",
                    "shipping_status": "shipped",
                    "payment_status": "success"
                  },
                  {
                    "id": 3,
                    "date": "2022/03/05",
                    "total": "$35.00",
                    "shipping_status": "pending",
                    "payment_status": "success"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Not logged in",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "message": "Please log in!"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "message": "Permission Denied!"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "message": "No orders found!"
                }
              }
            }
          }
        },
        "tags": ["Orders"]
      }
    }
  },
  "components": {
    "schemas": {
      "user_info": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User_Registration"
        }
      },
      "username_login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Username_Login"
        }
      },
      "email_login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "email_Login"
        }
      },
      "user_update": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User_Registration"
        }
      },
      "user_patch": {
        "type": "object",
        "properties": {
          "email": "string",
          "role": "string"
        }
      },
      "user_password_update": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User_Password_Update"
        }
      },
      "product_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        },
        "xml": {
          "name": "product_inventory"
        }
      },
      "cart_update": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "uuid"
          },
          "qty": {
            "type": "integer"
          }
        },
        "xml": {
          "name": "Cart_Update"
        }
      },
      "checkout": {
        "type": "object",
        "properties": {
          "payment_intent": {
            "type": "string"
          }
        }
      },
      "categories_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "shipping": {
        "type": "object",
        "properties": {
          "cartInfo": {
            "type": "object",
            "properties": {
              "totalPrice": 10.0,
              "totalWeight": 6.25
            }
          },
          "zip": {
            "type": "number"
          },
          "accessToken": {
            "type": "string"
          }
        }
      },
      "shipping_price": {
        "type": "object",
        "properties": {
          "shippingPrice": {
            "type": "number"
          }
        }
      }
    }
  }
}
